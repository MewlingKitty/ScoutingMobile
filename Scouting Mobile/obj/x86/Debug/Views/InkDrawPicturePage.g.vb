#ExternalChecksum("C:\Users\ncd39\source\repos\ScoutingMobile\Scouting Mobile\Views\InkDrawPicturePage.xaml", "{406ea660-64cf-4c82-b6f0-42d48172a799}", "F63E8EE553EE0C0BA2A36925BA316B5F")
'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Namespace Global.Scouting_Mobile.Views

    Partial Class InkDrawPicturePage
        Implements Global.Windows.UI.Xaml.Markup.IComponentConnector
        Implements Global.Windows.UI.Xaml.Markup.IComponentConnector2

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", " 10.0.18362.1")>  _
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Class XamlBindingSetters
            Public Shared Sub Set_Windows_UI_Xaml_Controls_Control_IsEnabled(obj As Global.Windows.UI.Xaml.Controls.Control, value As Global.System.Boolean)
                obj.IsEnabled = value
            End Sub
        End Class


        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", " 10.0.18362.1")>  _
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Class InkDrawPicturePage_obj1_Bindings
            Implements Global.Windows.UI.Xaml.Markup.IDataTemplateComponent
            Implements Global.Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics
            Implements Global.Windows.UI.Xaml.Markup.IComponentConnector
            Implements IInkDrawPicturePage_Bindings

            Private dataRoot As Global.Scouting_Mobile.Views.InkDrawPicturePage
            Private initialized As Boolean = False
            Private Const NOT_PHASED As Integer = 1 << 31
            Private Const DATA_CHANGED As Integer = 1 << 30

            ' Fields for each control that has bindings.
            Private obj24 As Global.Windows.UI.Xaml.Controls.AppBarButton
            Private obj25 As Global.Windows.UI.Xaml.Controls.AppBarButton

            Private bindingsTracking As InkDrawPicturePage_obj1_BindingsTracking

            ' Static fields for each binding's enabled/disabled state
            Private Shared isobj24IsEnabledDisabled As Boolean = False
            Private Shared isobj25IsEnabledDisabled As Boolean = False

            Public Sub New()
                Me.bindingsTracking = New InkDrawPicturePage_obj1_BindingsTracking(Me)
            End Sub
            
            Public Sub Disable(lineNumber As Integer, columnNumber As Integer) Implements Global.Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics.Disable
                If (lineNumber = 160 And columnNumber = 106) Then
                    isobj24IsEnabledDisabled = True
                ElseIf (lineNumber = 162 And columnNumber = 106) Then
                    isobj25IsEnabledDisabled = True
                End If
            End Sub

            ' IComponentConnector

            Public Sub Connect(connectionId As Integer, target As Global.System.Object) Implements Global.Windows.UI.Xaml.Markup.IComponentConnector.Connect
                Select Case connectionId
                    Case 24: ' Views\InkDrawPicturePage.xaml line 160                        
                        Me.obj24 = DirectCast(target, Global.Windows.UI.Xaml.Controls.AppBarButton)
                        Exit Select
                    Case 25: ' Views\InkDrawPicturePage.xaml line 162                        
                        Me.obj25 = DirectCast(target, Global.Windows.UI.Xaml.Controls.AppBarButton)
                        Exit Select
                    Case Else
                        Exit Select
                End Select
            End Sub

            ' IDataTemplateComponent

            Public Sub ProcessBindings(item As Global.System.Object, itemIndex As Integer, phase As Integer, ByRef nextPhase As Integer) Implements Global.Windows.UI.Xaml.Markup.IDataTemplateComponent.ProcessBindings
                nextPhase = -1
            End Sub
            
            Public Sub Recycle() Implements Global.Windows.UI.Xaml.Markup.IDataTemplateComponent.Recycle
                Exit Sub
            End Sub

            ' IInkDrawPicturePage_Bindings
            Public Sub Initialize() Implements IInkDrawPicturePage_Bindings.Initialize
                If Not Me.initialized Then
                    Me.Update()
                End If
            End Sub
            
            Public Sub Update() Implements IInkDrawPicturePage_Bindings.Update
                Me.Update_(Me.dataRoot, NOT_PHASED)
                Me.initialized = True
            End Sub

            Public Sub StopTracking() Implements IInkDrawPicturePage_Bindings.StopTracking
                Me.bindingsTracking.ReleaseAllListeners()
                Me.initialized = False
            End Sub

            Public Sub DisconnectUnloadedObject(connectionId As Integer) Implements IInkDrawPicturePage_Bindings.DisconnectUnloadedObject
                Throw New Global.System.ArgumentException("No unloadable elements to disconnect.")
            End Sub

            Public Function SetDataRoot(newDataRoot As Global.System.Object)
                Me.bindingsTracking.ReleaseAllListeners()
                If Not newDataRoot Is Nothing Then
                    Me.dataRoot = DirectCast(newDataRoot, Global.Scouting_Mobile.Views.InkDrawPicturePage)
                    Return True
                End If
                Return False
            End Function

            Public Sub Loading(src As Global.Windows.UI.Xaml.FrameworkElement, data As object)
                Me.Initialize()
            End Sub

            ' Update methods for each path node used in binding steps.
            Private Sub Update_(obj As Global.Scouting_Mobile.Views.InkDrawPicturePage, phase As Integer)
                Me.bindingsTracking.UpdateChildListeners_(obj)
                If obj IsNot Nothing Then
                    If (phase And (NOT_PHASED Or DATA_CHANGED Or (1 << 0))) <> 0 Then
                        Me.Update_SaveImageButtonIsEnabled(obj.SaveImageButtonIsEnabled, phase)
                        Me.Update_ClearAllButtonIsEnabled(obj.ClearAllButtonIsEnabled, phase)
                    End If
                End If
            End Sub
            Private Sub Update_SaveImageButtonIsEnabled(obj As Global.System.Boolean, phase As Integer)
                If (phase And ((1 << 0) Or NOT_PHASED Or DATA_CHANGED)) <> 0 Then
                    If isobj24IsEnabledDisabled = False Then
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(Me.obj24, obj)
                    End If
                End If
            End Sub
            Private Sub Update_ClearAllButtonIsEnabled(obj As Global.System.Boolean, phase As Integer)
                If (phase And ((1 << 0) Or NOT_PHASED Or DATA_CHANGED)) <> 0 Then
                    If isobj25IsEnabledDisabled = False Then
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(Me.obj25, obj)
                    End If
                End If
            End Sub

            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", " 10.0.18362.1")>  _
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Private Class InkDrawPicturePage_obj1_BindingsTracking
                Private weakRefToBindingObj As Global.System.WeakReference(Of InkDrawPicturePage_obj1_Bindings) = Nothing

                Public Sub New(obj As InkDrawPicturePage_obj1_Bindings)
                    weakRefToBindingObj = New Global.System.WeakReference(Of InkDrawPicturePage_obj1_Bindings)(obj)
                End Sub

                Private Function TryGetBindingObject() As InkDrawPicturePage_obj1_Bindings
                    Dim bindingObject As InkDrawPicturePage_obj1_Bindings = Nothing
                    if weakRefToBindingObj IsNot Nothing Then
                        weakRefToBindingObj.TryGetTarget(bindingObject)
                        If bindingObject Is Nothing Then
                            weakRefToBindingObj = Nothing
                            ReleaseAllListeners()
                        End If
                    End If
                    return bindingObject
                End Function

                Public Sub ReleaseAllListeners()
                    UpdateChildListeners_(Nothing)
                End Sub

                Public Sub PropertyChanged_(sender As object, e As Global.System.ComponentModel.PropertyChangedEventArgs)
                    Dim bindings As InkDrawPicturePage_obj1_Bindings = TryGetBindingObject()
                    If bindings IsNot Nothing Then
                        Dim propName As String = e.PropertyName
                        Dim obj As Global.Scouting_Mobile.Views.InkDrawPicturePage = TryCast(sender, Global.Scouting_Mobile.Views.InkDrawPicturePage)
                        If Global.System.String.IsNullOrEmpty(propName) Then
                            If obj IsNot Nothing Then
                                bindings.Update_SaveImageButtonIsEnabled(obj.SaveImageButtonIsEnabled, DATA_CHANGED)
                                bindings.Update_ClearAllButtonIsEnabled(obj.ClearAllButtonIsEnabled, DATA_CHANGED)
                            End If
                        Else
                            Select Case propName
                                Case "SaveImageButtonIsEnabled":
                                    If obj IsNot Nothing Then
                                        bindings.Update_SaveImageButtonIsEnabled(obj.SaveImageButtonIsEnabled, DATA_CHANGED)
                                    End If
                                    Exit Select
                                Case "ClearAllButtonIsEnabled":
                                    If obj IsNot Nothing Then
                                        bindings.Update_ClearAllButtonIsEnabled(obj.ClearAllButtonIsEnabled, DATA_CHANGED)
                                    End If
                                    Exit Select
                                Case Else
                                    Exit Select
                            End Select
                        End If
                    End If
                End Sub
                Public Sub UpdateChildListeners_(obj As Global.Scouting_Mobile.Views.InkDrawPicturePage)
                    Dim bindings As InkDrawPicturePage_obj1_Bindings = TryGetBindingObject()
                    If bindings IsNot Nothing Then
                        If bindings.dataRoot IsNot Nothing Then
                            RemoveHandler DirectCast(bindings.dataRoot,Global.System.ComponentModel.INotifyPropertyChanged).PropertyChanged, AddressOf PropertyChanged_
                        End If
                        If obj IsNot Nothing Then
                            bindings.dataRoot = obj
                            AddHandler DirectCast(obj, Global.System.ComponentModel.INotifyPropertyChanged).PropertyChanged, AddressOf PropertyChanged_
                        End If
                    End If
                End Sub
            End Class
        End Class

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", " 10.0.18362.1")>  _
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Connect(ByVal connectionId As Integer, ByVal target As Global.System.Object) Implements Global.Windows.UI.Xaml.Markup.IComponentConnector.Connect
            Select Case connectionId
            Case 2 ' Views\InkDrawPicturePage.xaml line 92
                    Dim element2 As Global.Windows.UI.Xaml.Controls.InkToolbar = CType(target, Global.Windows.UI.Xaml.Controls.InkToolbar)
                AddHandler DirectCast(element2, Global.Windows.UI.Xaml.Controls.InkToolbar).Loaded, AddressOf Me.OnInkToolbarLoaded
                    Exit Select
            Case 4 ' Views\InkDrawPicturePage.xaml line 13
                    Dim element4 As Global.Windows.UI.Xaml.Controls.InkToolbar = CType(target, Global.Windows.UI.Xaml.Controls.InkToolbar)
                AddHandler DirectCast(element4, Global.Windows.UI.Xaml.Controls.InkToolbar).Loaded, AddressOf Me.OnInkToolbarLoaded
                    Exit Select
            Case 6 ' Views\InkDrawPicturePage.xaml line 37
                    Dim element6 As Global.Windows.UI.Xaml.Controls.AppBarButton = CType(target, Global.Windows.UI.Xaml.Controls.AppBarButton)
                AddHandler DirectCast(element6, Global.Windows.UI.Xaml.Controls.AppBarButton).Click, AddressOf Me.ZoomIn_Click
                    Exit Select
            Case 7 ' Views\InkDrawPicturePage.xaml line 43
                    Dim element7 As Global.Windows.UI.Xaml.Controls.AppBarButton = CType(target, Global.Windows.UI.Xaml.Controls.AppBarButton)
                AddHandler DirectCast(element7, Global.Windows.UI.Xaml.Controls.AppBarButton).Click, AddressOf Me.ZoomOut_Click
                    Exit Select
            Case 8 ' Views\InkDrawPicturePage.xaml line 51
                    Dim element8 As Global.Windows.UI.Xaml.Controls.AppBarButton = CType(target, Global.Windows.UI.Xaml.Controls.AppBarButton)
                AddHandler DirectCast(element8, Global.Windows.UI.Xaml.Controls.AppBarButton).Click, AddressOf Me.ResetZoom_Click
                    Exit Select
            Case 9 ' Views\InkDrawPicturePage.xaml line 57
                    Dim element9 As Global.Windows.UI.Xaml.Controls.AppBarButton = CType(target, Global.Windows.UI.Xaml.Controls.AppBarButton)
                AddHandler DirectCast(element9, Global.Windows.UI.Xaml.Controls.AppBarButton).Click, AddressOf Me.FitToScreen_Click
                    Exit Select
            Case 10 ' Views\InkDrawPicturePage.xaml line 65
                    Dim element10 As Global.Windows.UI.Xaml.Controls.AppBarButton = CType(target, Global.Windows.UI.Xaml.Controls.AppBarButton)
                AddHandler DirectCast(element10, Global.Windows.UI.Xaml.Controls.AppBarButton).Click, AddressOf Me.LoadImage_Click
                    Exit Select
            Case 11 ' Views\InkDrawPicturePage.xaml line 72
                    Dim element11 As Global.Windows.UI.Xaml.Controls.AppBarButton = CType(target, Global.Windows.UI.Xaml.Controls.AppBarButton)
                AddHandler DirectCast(element11, Global.Windows.UI.Xaml.Controls.AppBarButton).Click, AddressOf Me.SaveImage_Click
                    Exit Select
            Case 12 ' Views\InkDrawPicturePage.xaml line 80
                    Dim element12 As Global.Windows.UI.Xaml.Controls.AppBarButton = CType(target, Global.Windows.UI.Xaml.Controls.AppBarButton)
                AddHandler DirectCast(element12, Global.Windows.UI.Xaml.Controls.AppBarButton).Click, AddressOf Me.ClearAll_Click
                    Exit Select
            Case 13 ' Views\InkDrawPicturePage.xaml line 109
                    Me.ContentArea = CType(target, Global.Windows.UI.Xaml.Controls.Grid)
                    Exit Select
            Case 14 ' Views\InkDrawPicturePage.xaml line 111
                    Me.visualStateGroup = CType(target, Global.Windows.UI.Xaml.VisualStateGroup)
                AddHandler DirectCast(Me.visualStateGroup, Global.Windows.UI.Xaml.VisualStateGroup).CurrentStateChanged, AddressOf Me.VisualStateGroup_CurrentStateChanged
                    Exit Select
            Case 15 ' Views\InkDrawPicturePage.xaml line 112
                    Me.SmallVisualState = CType(target, Global.Windows.UI.Xaml.VisualState)
                    Exit Select
            Case 16 ' Views\InkDrawPicturePage.xaml line 117
                    Me.BigVisualState = CType(target, Global.Windows.UI.Xaml.VisualState)
                    Exit Select
            Case 17 ' Views\InkDrawPicturePage.xaml line 128
                    Me.canvasScroll = CType(target, Global.Windows.UI.Xaml.Controls.ScrollViewer)
                    Exit Select
            Case 18 ' Views\InkDrawPicturePage.xaml line 143
                    Me.bottomCommandBar = CType(target, Global.Windows.UI.Xaml.Controls.CommandBar)
                    Exit Select
            Case 19 ' Views\InkDrawPicturePage.xaml line 148
                    Dim element19 As Global.Windows.UI.Xaml.Controls.AppBarButton = CType(target, Global.Windows.UI.Xaml.Controls.AppBarButton)
                AddHandler DirectCast(element19, Global.Windows.UI.Xaml.Controls.AppBarButton).Click, AddressOf Me.ZoomIn_Click
                    Exit Select
            Case 20 ' Views\InkDrawPicturePage.xaml line 149
                    Dim element20 As Global.Windows.UI.Xaml.Controls.AppBarButton = CType(target, Global.Windows.UI.Xaml.Controls.AppBarButton)
                AddHandler DirectCast(element20, Global.Windows.UI.Xaml.Controls.AppBarButton).Click, AddressOf Me.ZoomOut_Click
                    Exit Select
            Case 21 ' Views\InkDrawPicturePage.xaml line 152
                    Dim element21 As Global.Windows.UI.Xaml.Controls.AppBarButton = CType(target, Global.Windows.UI.Xaml.Controls.AppBarButton)
                AddHandler DirectCast(element21, Global.Windows.UI.Xaml.Controls.AppBarButton).Click, AddressOf Me.ResetZoom_Click
                    Exit Select
            Case 22 ' Views\InkDrawPicturePage.xaml line 153
                    Dim element22 As Global.Windows.UI.Xaml.Controls.AppBarButton = CType(target, Global.Windows.UI.Xaml.Controls.AppBarButton)
                AddHandler DirectCast(element22, Global.Windows.UI.Xaml.Controls.AppBarButton).Click, AddressOf Me.FitToScreen_Click
                    Exit Select
            Case 23 ' Views\InkDrawPicturePage.xaml line 157
                    Dim element23 As Global.Windows.UI.Xaml.Controls.AppBarButton = CType(target, Global.Windows.UI.Xaml.Controls.AppBarButton)
                AddHandler DirectCast(element23, Global.Windows.UI.Xaml.Controls.AppBarButton).Click, AddressOf Me.LoadImage_Click
                    Exit Select
            Case 24 ' Views\InkDrawPicturePage.xaml line 160
                    Dim element24 As Global.Windows.UI.Xaml.Controls.AppBarButton = CType(target, Global.Windows.UI.Xaml.Controls.AppBarButton)
                AddHandler DirectCast(element24, Global.Windows.UI.Xaml.Controls.AppBarButton).Click, AddressOf Me.SaveImage_Click
                    Exit Select
            Case 25 ' Views\InkDrawPicturePage.xaml line 162
                    Dim element25 As Global.Windows.UI.Xaml.Controls.AppBarButton = CType(target, Global.Windows.UI.Xaml.Controls.AppBarButton)
                AddHandler DirectCast(element25, Global.Windows.UI.Xaml.Controls.AppBarButton).Click, AddressOf Me.ClearAll_Click
                    Exit Select
            Case 26 ' Views\InkDrawPicturePage.xaml line 137
                    Me.image = CType(target, Global.Windows.UI.Xaml.Controls.Image)
                    Exit Select
            Case 27 ' Views\InkDrawPicturePage.xaml line 138
                    Me.inkCanvas = CType(target, Global.Windows.UI.Xaml.Controls.InkCanvas)
                    Exit Select
                    Case Else
                        Exit Select
            End Select
                Me._contentLoaded = true
        End Sub

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", " 10.0.18362.1")>  _
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function GetBindingConnector(connectionId As Integer, target As Object) As Global.Windows.UI.Xaml.Markup.IComponentConnector Implements Global.Windows.UI.Xaml.Markup.IComponentConnector2.GetBindingConnector
            Dim returnValue As Global.Windows.UI.Xaml.Markup.IComponentConnector = Nothing
            Select Case connectionId
               Case 1: ' Views\InkDrawPicturePage.xaml line 1
                    Dim element1 As Global.Windows.UI.Xaml.Controls.Page = CType(target, Global.Windows.UI.Xaml.Controls.Page)
                    Dim bindings As InkDrawPicturePage_obj1_Bindings = New InkDrawPicturePage_obj1_Bindings()
                    returnValue = bindings
                    bindings.SetDataRoot(Me)
                    Me.Bindings = bindings
                    AddHandler element1.Loading, AddressOf bindings.Loading
                    Global.Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings)
                    Exit Select
            End Select
            Return returnValue
        End Function
    End Class

End Namespace


